name: "Build and Deploy Frontend, Backend, DB, Infra"

on:
    push:
        branches:
            - "main"
    workflow_dispatch:
env:
    be_image_name: "${{ secrets.DOCKERHUB_USERNAME }}/assignment-be"
    fe_image_name: "${{ secrets.DOCKERHUB_USERNAME }}/assignment-fe"

jobs:
    build_frontend_and_push:
        outputs:
            frontend_version: ${{ steps.versions.outputs.frontend }}
        name: "Builds the frontend and pushes to dockerhub"
        runs-on: ubuntu-latest
        steps:
            - name: "Checkout the branch"
              uses: "actions/checkout@v5"

            - name: Generate FE Version
              id: versions
              run: |
                  VERSION=$(git rev-parse --short HEAD)
                  echo "frontend=$VERSION" >> $GITHUB_OUTPUT

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  push: true
                  tags: |
                      "${{ env.fe_image_name}}:${{ steps.versions.outputs.frontend }}"
                      "${{env.fe_image_name}}:latest"
                  context: "./ecommerce-app-frontend"

    build_backend_and_push:
        needs: build_frontend_and_push
        outputs:
            backend_version: ${{ steps.versions.outputs.backend }}
        name: "Builds the backend and pushes to dockerhub"
        runs-on: ubuntu-latest
        steps:
            - name: "Checkout the branch"
              uses: "actions/checkout@v5"
            - name: Generate BE Version
              id: versions
              run: |
                  VERSION=$(git rev-parse --short HEAD)
                  echo "backend=$VERSION" >> $GITHUB_OUTPUT

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  push: true
                  tags: |
                      "${{ env.be_image_name}}:${{ steps.versions.outputs.backend }}"
                      "${{env.be_image_name}}:latest"
                  context: "./ecommerce-app-backend"

    build_infrastructure:
        needs: [build_backend_and_push, build_frontend_and_push]
        env:
            TF_VAR_db_user: ${{secrets.DB_USER}}
            TF_VAR_ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
            TF_VAR_db_password: ${{secrets.db_password}}
            TF_VAR_db_admin: ${{secrets.db_admin}}
            TF_VAR_author: ${{secrets.author}}
            TF_VAR_resource_prefix: ${{secrets.resource_prefix}}
            TF_VAR_resource_group_name: ${{secrets.resource_group_name}}
            TF_VAR_resource_group_location: ${{secrets.resource_group_location}}
            TF_VAR_be_port: 80
            TF_VAR_fe_port: 80
            TF_VAR_be_tag: ${{needs.build_backend_and_push.outputs.backend_version}}
            TF_VAR_fe_tag: ${{needs.build_frontend_and_push.outputs.frontend_version}}
        name: "Builds the infrastructure on Azure"
        runs-on: ubuntu-latest
        steps:
            - name: "Checkout the branch"
              uses: "actions/checkout@v5"

            - name: Azure Login (Service Principal)
              uses: azure/login@v2
              with:
                  creds: ${{secrets.AZURE_CREDS}}

            - name: HashiCorp - Setup Terraform
              uses: hashicorp/setup-terraform@v3.1.2

            - name: "Initialize Terraform"
              run: terraform init

            - name: Export the image names
              run: |
                  export TF_VAR_be_image_name=${{env.be_image_name}}
                  export TF_VAR_fe_image_name=${{env.fe_image_name}}

            - name: Run Terraform Plan
              run: terraform plan

            - name: Apply Terraform
              run: terraform apply -auto-approve
